---
title: "Frequently Asked Questions"
---
<!-- vale Posit.Contractions = NO -->

### What programming languages are supported in Positron?

* R and Python are first-class supported languages via efforts here at Posit.
* Additional languages typically used in package development are supported via existing third party extensions. These don't make use of the full Positron data science experience including an interactive console, plots, and similar. Some examples include Rust, Javascript/Typescript, C/C++, or Lua. 
* Positron provides public APIs for additional data science languages to be supported in the future.

### How is Positron different from RStudio, VS Code, or Jupyter notebooks?

* Positron has first-class, built-in support for R and/or Python via an integrated Console, with extensibility options for other languages in the future. This native support includes specialized views and panes throughout Positron such as a [Data Explorer](/data-explorer.qmd), [Connections Pane](connections-pane.qmd), Variables Pane, and more.
* Positron runs the interpreter separately from the IDE, so unlike in RStudio a crash in R/Python won't always crash the IDE. It also means that you can swap between versions of your preferred language on the fly without a full reload of the IDE, just the integrated console.
* Positron supports VS Code compatible extensions (`.vsix` files), providing extensibility of capabilities beyond the core IDE itself. By building on Code OSS, Positron gets rich text editor capabilities and access to 1,000s of community extensions out of the box. [Read more about using extensions with Positron](/extensions.qmd).
* Positron is deeply focused on native data science workflows; it provides a batteries-included and cohesive experience beyond that of a general-purpose IDE or text editor such as VS Code. 

### Why build a new IDE rather than VS Code extensions?

* Our aspirations for Positron go far beyond what is possible via only extensions. Ultimately, VS Code's Extension API does not provide enough leverage to modify the main "workbench" surface.
* To deliver a truly excellent data science experience, we need to change and augment core components and UI elements that are outside the scope of VS Code's extension API.
* We have developed some components as extensions for use in both Positron and VS Code, such as Quarto and Shiny for R/Python. However, given the additional API surface in Positron, we plan to progressively enhance these and future extensions when installed in Positron.

### Is RStudio going away?

* No, we are committed to maintaining and updating RStudio.
* While Positron and RStudio have some features in common, some R-focused features will remain exclusive to RStudio.
* We began developing Positron as part of our mission to support open-source data science in multiple languages, including R and Python.
* If you're currently using RStudio and are happy with the experience, you can continue to enjoy RStudio. RStudio includes 10+ years of applied optimizations for R data analysis and package development.

### I'm coming from RStudio, and Positron's keybindings are too different

* Check out the [RStudio Keymap](keyboard-shortcuts.qmd#rstudio-keymap) section of our documentation. 
* To opt in to these RStudio-like keybindings:
    * Run the command _Preferences: Open Settings_.
    * Search for "keymap".
    * Find "RStudio > Keymap: Enable", and check the box to opt in.
